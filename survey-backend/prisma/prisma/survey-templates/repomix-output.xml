This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
add-fields-to-all.js
additional-base-fields.ts
ahu-survey.ts
boiler-survey.ts
building-information-survey.ts
chiller-survey.ts
common-fields.ts
controls-survey.ts
equipment-summaries-survey.ts
exhaust-fan-survey.ts
index.ts
lighting-survey.ts
package.json
pump-survey.ts
README.md
rtu-survey.ts
types.ts
update-markups-field.js
zone-terminal-survey.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="add-fields-to-all.js">
/**
 * Script to add the additional base fields to all survey templates
 * 
 * This script adds the photo, notes, and markup fields to all survey templates
 * Run with: node --experimental-modules --experimental-specifier-resolution=node --experimental-json-modules backend/prisma/survey-templates/add-fields-to-all.js
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory name
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Directory containing the survey templates
const templatesDir = __dirname;

// List of template files to update (excluding the ones we've already updated)
const templateFiles = [
  'chiller-survey.ts',
  'pump-survey.ts',
  'controls-survey.ts',
  'exhaust-fan-survey.ts',
  'rtu-survey.ts',
  'zone-terminal-survey.ts',
  'lighting-survey.ts',
  'equipment-summaries-survey.ts',
  'building-information-survey.ts'
];

// The content to add to each template
const importStatement = `import { additionalBaseFields } from './additional-base-fields.ts';\n`;

const fieldsToAdd = `
    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field from additionalBaseFields
    ...additionalBaseFields.markups
`;

// Process each template file
for (const file of templateFiles) {
  const filePath = path.join(templatesDir, file);
  
  try {
    // Read the file content
    let content = fs.readFileSync(filePath, 'utf8');
    
    // Add the import statement if it doesn't exist
    if (!content.includes("import { additionalBaseFields }")) {
      const importPos = content.indexOf('import');
      const nextLinePos = content.indexOf('\n', importPos) + 1;
      content = content.substring(0, nextLinePos) + importStatement + content.substring(nextLinePos);
    }
    
    // Find the position to add the fields
    const baseFieldsEndRegex = /equipmentPicture: {[\s\S]+?validation: { required: false }[\s\S]+?}/;
    const match = content.match(baseFieldsEndRegex);
    
    if (match) {
      const endPos = match.index + match[0].length;
      const beforeFields = content.substring(0, endPos);
      const afterFields = content.substring(endPos);
      
      // Check if we need to add a comma
      const needsComma = !beforeFields.trim().endsWith(',');
      const separator = needsComma ? ',\n' : '\n';
      
      // Add the fields
      content = beforeFields + separator + fieldsToAdd + afterFields;
      
      // Write the updated content back to the file
      fs.writeFileSync(filePath, content);
      console.log(`Updated ${file}`);
    } else {
      console.error(`Could not find the right position to add fields in ${file}`);
    }
  } catch (error) {
    console.error(`Error processing ${file}:`, error);
  }
}

console.log('All templates updated successfully!');
</file>

<file path="additional-base-fields.ts">
/**
 * Additional base fields to be added to all survey templates
 * These fields provide support for photos, notes, and markups
 * 
 * IMPORTANT: These fields use the 'array' type which requires proper handling in the frontend.
 * Make sure the SurveyField interface in packages/types/survey.ts includes 'array' as a valid type
 * and has the itemTemplate property. If these fields are not appearing in the React templates,
 * verify that the SurveyField interface is properly configured.
 * 
 * For more information, see:
 * - docs/surveys/array-fields-guide.md
 * - docs/surveys/SURVEY-Issues.md
 */
export const additionalBaseFields = {
  // Fields for photos
  surveyPhotos: {
    type: "array",
    label: "Survey Photos",
    itemTemplate: {
      photo: {
        type: "file",
        label: "Photo",
        validation: { required: true }
      },
      description: {
        type: "text",
        label: "Description",
        validation: { required: false }
      },
      location: {
        type: "text",
        label: "Location",
        validation: { required: false }
      }
    },
    validation: { required: false }
  },
  
  // Fields for detailed notes
  surveyNotes: {
    type: "array",
    label: "Survey Notes",
    itemTemplate: {
      note: {
        type: "textarea",
        label: "Note",
        validation: { required: true }
      },
      category: {
        type: "select",
        label: "Category",
        options: [
          { value: "GENERAL", label: "General" },
          { value: "ISSUE", label: "Issue" },
          { value: "RECOMMENDATION", label: "Recommendation" },
          { value: "OBSERVATION", label: "Observation" }
        ],
        validation: { required: false }
      },
      priority: {
        type: "select",
        label: "Priority",
        options: [
          { value: "LOW", label: "Low" },
          { value: "MEDIUM", label: "Medium" },
          { value: "HIGH", label: "High" }
        ],
        validation: { required: false }
      }
    },
    validation: { required: false }
  },
  
  // Fields for markups and diagrams
  markups: {
    type: "array",
    label: "Markups & Diagrams",
    itemTemplate: {
      markup: {
        type: "file",
        label: "Markup/Diagram",
        validation: { required: true }
      },
      title: {
        type: "text",
        label: "Title",
        validation: { required: true }
      },
      description: {
        type: "textarea",
        label: "Description",
        validation: { required: false }
      }
    },
    validation: { required: false }
  }
};
</file>

<file path="ahu-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const ahuSurvey: SurveyTemplate = {
  name: "AHU Survey",
  description: "Survey template for Air Handling Units",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    manufacturer: {
      type: "text",
      label: "Manufacturer",
      validation: { required: false }
    },
    modelNo: {
      type: "text",
      label: "Model Number",
      validation: { required: false }
    },
    serialNo: {
      type: "text",
      label: "Serial Number",
      validation: { required: false }
    },
    year: {
      type: "text",
      label: "Year",
      validation: { required: false }
    },
    mechanicalDwgsAvailable: {
      type: "radio",
      label: "Mechanical Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    maintenanceLogAvailable: {
      type: "radio",
      label: "Maintenance Log Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General System Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    controlDwgsAvailable: {
      type: "radio",
      label: "Control Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSequencesAvailable: {
      type: "radio",
      label: "Control Sequences Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSystemUsedForTesting: {
      type: "radio",
      label: "Control System Used For Testing",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    dataLoggerForInvPhase: {
      type: "radio",
      label: "Data Logger For Investigation Phase",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlType: {
      type: "select",
      label: "Control Type",
      options: [
        { value: "DDC", label: "DDC" },
        { value: "ELECTRONIC", label: "Electronic" },
        { value: "PNEUMATIC", label: "Pneumatic" }
      ],
      validation: { required: false }
    },
    onOffControlSchedule: {
      type: "text",
      label: "ON/OFF Control & Schedule",
      validation: { required: false }
    },
    status: {
      type: "text",
      label: "Status",
      validation: { required: false }
    },
    oatLockout: {
      type: "text",
      label: "OAT Lockout",
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    }
,
    
    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field from additionalBaseFields
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }
  },
  specificFields: {
    systemType: {
      type: "select",
      label: "System Type",
      options: [
        { value: "SZVT", label: "Single Zone Variable Temperature" },
        { value: "CVRT", label: "Constant Volume Reheat Terminal" },
        { value: "MZ", label: "Multi-Zone" },
        { value: "VAV", label: "Variable Air Volume" },
        { value: "OTHER", label: "Other" }
      ],
      validation: { required: true }
    },
    fanArrangement: {
      type: "select",
      label: "Fan Arrangement",
      options: [
        { value: "BLOW-THRU", label: "Blow-Through" },
        { value: "DRAW-THRU", label: "Draw-Through" }
      ],
      validation: { required: true }
    },
    returnAirPath: {
      type: "select",
      label: "Return Air Path",
      options: [
        { value: "DUCTED", label: "Ducted" },
        { value: "PLENUM", label: "Plenum" }
      ],
      validation: { required: true }
    },
    filterCondition: {
      type: "select",
      label: "Filter Condition",
      options: [
        { value: "CLEAN", label: "Clean" },
        { value: "FAIR", label: "Fair" },
        { value: "DIRTY", label: "Dirty" },
        { value: "MISSING", label: "Missing" }
      ],
      validation: { required: true }
    },
    supplyFanOperating: {
      type: "radio",
      label: "Supply Fan Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    returnFanOperating: {
      type: "radio",
      label: "Return Fan Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" },
        { value: "NA", label: "N/A" }
      ],
      validation: { required: true }
    },
    coolingCoilCondition: {
      type: "select",
      label: "Cooling Coil Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" },
        { value: "NA", label: "N/A" }
      ],
      validation: { required: false }
    },
    heatingCoilCondition: {
      type: "select",
      label: "Heating Coil Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" },
        { value: "NA", label: "N/A" }
      ],
      validation: { required: false }
    },
    heatingCoilData: {
      type: "object",
      label: "Heating Coil Data",
      fields: {
        coilType: {
          type: "select",
          label: "Coil Type",
          options: [
            { value: "HW", label: "Hot Water" },
            { value: "STEAM", label: "Steam" },
            { value: "ELECTRIC", label: "Electric" },
            { value: "FUEL", label: "Fuel" },
            { value: "NONE", label: "None" }
          ],
          validation: { required: false }
        },
        valveType: {
          type: "select",
          label: "Valve Type",
          options: [
            { value: "2-WAY", label: "2-Way" },
            { value: "3-WAY", label: "3-Way" },
            { value: "NONE", label: "None" }
          ],
          validation: { required: false }
        },
        inputOutput: {
          type: "text",
          label: "Input/Output",
          validation: { required: false }
        },
        pipingInsulated: {
          type: "radio",
          label: "Piping Insulated",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        }
      }
    },
    coolingCoilData: {
      type: "object",
      label: "Cooling Coil Data",
      fields: {
        coilType: {
          type: "select",
          label: "Coil Type",
          options: [
            { value: "CHW", label: "Chilled Water" },
            { value: "DX", label: "Direct Expansion" },
            { value: "OTHER", label: "Other" },
            { value: "NONE", label: "None" }
          ],
          validation: { required: false }
        },
        valveType: {
          type: "select",
          label: "Valve Type",
          options: [
            { value: "2-WAY", label: "2-Way" },
            { value: "3-WAY", label: "3-Way" },
            { value: "NONE", label: "None" }
          ],
          validation: { required: false }
        },
        inputOutput: {
          type: "text",
          label: "Input/Output",
          validation: { required: false }
        },
        pipingInsulated: {
          type: "radio",
          label: "Piping Insulated",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        }
      }
    },
    supplyFanData: {
      type: "object",
      label: "Supply Fan Data",
      fields: {
        manufacturer: {
          type: "text",
          label: "Manufacturer",
          validation: { required: false }
        },
        model: {
          type: "text",
          label: "Model",
          validation: { required: false }
        },
        cfm: {
          type: "text",
          label: "CFM",
          validation: { required: false }
        },
        motorHP: {
          type: "text",
          label: "Motor HP",
          validation: { required: false }
        }
      }
    },
    outsideAirControl: {
      type: "object",
      label: "Outside Air Control",
      fields: {
        controlType: {
          type: "select",
          label: "Control Type",
          options: [
            { value: "FIXED", label: "Fixed" },
            { value: "ECONO", label: "Economizer" },
            { value: "DEMAND CONTROLLED VENT", label: "Demand Controlled Ventilation" }
          ],
          validation: { required: false }
        },
        economizer: {
          type: "select",
          label: "Economizer Type",
          options: [
            { value: "TEMP", label: "Temperature" },
            { value: "ENTHALPY", label: "Enthalpy" },
            { value: "NONE", label: "None" }
          ],
          validation: { required: false }
        },
        oaPercentage: {
          type: "text",
          label: "OA Percentage",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="boiler-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const boilerSurvey: SurveyTemplate = {
  name: "Boiler Survey",
  description: "Survey template for Boilers",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    manufacturer: {
      type: "text",
      label: "Manufacturer",
      validation: { required: false }
    },
    modelNo: {
      type: "text",
      label: "Model Number",
      validation: { required: false }
    },
    serialNo: {
      type: "text",
      label: "Serial Number",
      validation: { required: false }
    },
    year: {
      type: "text",
      label: "Year",
      validation: { required: false }
    },
    mechanicalDwgsAvailable: {
      type: "radio",
      label: "Mechanical Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    maintenanceLogAvailable: {
      type: "radio",
      label: "Maintenance Log Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General System Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    controlDwgsAvailable: {
      type: "radio",
      label: "Control Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSequencesAvailable: {
      type: "radio",
      label: "Control Sequences Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSystemUsedForTesting: {
      type: "radio",
      label: "Control System Used For Testing",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    dataLoggerForInvPhase: {
      type: "radio",
      label: "Data Logger For Investigation Phase",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlType: {
      type: "select",
      label: "Control Type",
      options: [
        { value: "DDC", label: "DDC" },
        { value: "ELECTRONIC", label: "Electronic" },
        { value: "PNEUMATIC", label: "Pneumatic" }
      ],
      validation: { required: false }
    },
    onOffControlSchedule: {
      type: "text",
      label: "ON/OFF Control & Schedule",
      validation: { required: false }
    },
    status: {
      type: "text",
      label: "Status",
      validation: { required: false }
    },
    oatLockout: {
      type: "text",
      label: "OAT Lockout",
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    }
,
    
    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field from additionalBaseFields
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }
  },
  specificFields: {
    boilerType: {
      type: "select",
      label: "Boiler Type",
      options: [
        { value: "NATURAL DRAFT", label: "Natural Draft" },
        { value: "FORCED DRAFT", label: "Forced Draft" },
        { value: "ELECTRIC RESISTANCE", label: "Electric Resistance" },
        { value: "CONDENSING", label: "Condensing" }
      ],
      validation: { required: true }
    },
    fuelType: {
      type: "select",
      label: "Fuel Type",
      options: [
        { value: "NATURAL GAS", label: "Natural Gas" },
        { value: "FUEL OIL #2", label: "Fuel Oil #2" },
        { value: "FUEL OIL #6", label: "Fuel Oil #6" },
        { value: "PROPANE", label: "Propane" },
        { value: "ELECTRICITY", label: "Electricity" }
      ],
      validation: { required: true }
    },
    heatingMedium: {
      type: "select",
      label: "Heating Medium",
      options: [
        { value: "WATER", label: "Water" },
        { value: "STEAM", label: "Steam" },
        { value: "OTHER", label: "Other" }
      ],
      validation: { required: true }
    },
    burnerCondition: {
      type: "select",
      label: "Burner Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" },
        { value: "NA", label: "N/A" }
      ],
      validation: { required: false }
    },
    heatExchangerCondition: {
      type: "select",
      label: "Heat Exchanger Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    safetyControlsOperating: {
      type: "radio",
      label: "Safety Controls Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" },
        { value: "UNTESTED", label: "Untested" }
      ],
      validation: { required: true }
    },
    designInformation: {
      type: "object",
      label: "Design Information",
      fields: {
        inputMBH: {
          type: "text",
          label: "Input MBH",
          validation: { required: false }
        },
        outputMBH: {
          type: "text",
          label: "Output MBH",
          validation: { required: false }
        },
        gpm: {
          type: "text",
          label: "GPM",
          validation: { required: false }
        },
        ewtLwt: {
          type: "text",
          label: "EWT/LWT",
          validation: { required: false }
        },
        gasPressure: {
          type: "text",
          label: "Gas Pressure",
          validation: { required: false }
        }
      }
    },
    combustionInformation: {
      type: "object",
      label: "Combustion Information",
      fields: {
        combustionType: {
          type: "select",
          label: "Combustion Type",
          options: [
            { value: "DIRECT VENT", label: "Direct Vent" },
            { value: "LOUVER", label: "Louver" }
          ],
          validation: { required: false }
        },
        louverControl: {
          type: "select",
          label: "Louver Control",
          options: [
            { value: "OPEN WHEN BOILER ON", label: "Open When Boiler On" },
            { value: "ALWAYS OPEN", label: "Always Open" },
            { value: "ALWAYS CLOSED", label: "Always Closed" }
          ],
          validation: { required: false }
        }
      }
    },
    burnerNameplateData: {
      type: "object",
      label: "Burner Nameplate Data",
      fields: {
        manufacturer: {
          type: "text",
          label: "Manufacturer",
          validation: { required: false }
        },
        model: {
          type: "text",
          label: "Model",
          validation: { required: false }
        },
        turndownRatio: {
          type: "text",
          label: "Turndown Ratio",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="building-information-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const buildingInformationSurvey: SurveyTemplate = {
  name: "Building Information Survey",
  description: "Survey template for Building Information",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    generalNotes: {
      type: "textarea",
      label: "Notes",
      validation: { required: false }
    }
,
    
    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field from additionalBaseFields
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }
  },
  specificFields: {
    buildingInformation: {
      type: "object",
      label: "Building Information",
      fields: {
        facilityTypeUse: {
          type: "text",
          label: "Facility Type/Use",
          validation: { required: false }
        },
        originalConstruction: {
          type: "text",
          label: "Original construction",
          validation: { required: false }
        },
        conditionedArea: {
          type: "text",
          label: "Conditioned area (SF)",
          validation: { required: false }
        },
        numberOfStories: {
          type: "text",
          label: "Number of stories",
          validation: { required: false }
        },
        overallCondition: {
          type: "text",
          label: "Overall condition",
          validation: { required: false }
        },
        wholeBuilding: {
          type: "text",
          label: "Whole Building",
          validation: { required: false }
        },
        specificSpaces: {
          type: "array",
          label: "Specific spaces",
          itemTemplate: {
            spaceName: {
              type: "text",
              label: "Space Name",
              validation: { required: false }
            }
          },
          validation: { required: false }
        },
        occupancy: {
          type: "text",
          label: "Occupancy",
          validation: { required: false }
        },
        renovationHistory: {
          type: "textarea",
          label: "Brief renovation history",
          validation: { required: false }
        },
        plannedImprovements: {
          type: "textarea",
          label: "Brief description of building improvements planned",
          validation: { required: false }
        },
        constructionTypes: {
          type: "object",
          label: "Construction Types",
          fields: {
            walls: {
              type: "text",
              label: "Walls",
              validation: { required: false }
            },
            windows: {
              type: "text",
              label: "Windows",
              validation: { required: false }
            }
          }
        },
        hoursOfOperation: {
          type: "text",
          label: "Hours of operation",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="chiller-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const chillerSurvey: SurveyTemplate = {
  name: "Chiller Survey",
  description: "Survey template for Chillers",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    manufacturer: {
      type: "text",
      label: "Manufacturer",
      validation: { required: false }
    },
    modelNo: {
      type: "text",
      label: "Model Number",
      validation: { required: false }
    },
    serialNo: {
      type: "text",
      label: "Serial Number",
      validation: { required: false }
    },
    year: {
      type: "text",
      label: "Year",
      validation: { required: false }
    },
    mechanicalDwgsAvailable: {
      type: "radio",
      label: "Mechanical Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    maintenanceLogAvailable: {
      type: "radio",
      label: "Maintenance Log Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General System Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    controlDwgsAvailable: {
      type: "radio",
      label: "Control Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSequencesAvailable: {
      type: "radio",
      label: "Control Sequences Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSystemUsedForTesting: {
      type: "radio",
      label: "Control System Used For Testing",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    dataLoggerForInvPhase: {
      type: "radio",
      label: "Data Logger For Investigation Phase",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlType: {
      type: "select",
      label: "Control Type",
      options: [
        { value: "DDC", label: "DDC" },
        { value: "ELECTRONIC", label: "Electronic" },
        { value: "PNEUMATIC", label: "Pneumatic" }
      ],
      validation: { required: false }
    },
    onOffControlSchedule: {
      type: "text",
      label: "ON/OFF Control & Schedule",
      validation: { required: false }
    },
    status: {
      type: "text",
      label: "Status",
      validation: { required: false }
    },
    oatLockout: {
      type: "text",
      label: "OAT Lockout",
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    refrigerantType: {
      type: "select",
      label: "Refrigerant Type",
      options: [
        { value: "R-134a", label: "R-134a" },
        { value: "R-410A", label: "R-410A" },
        { value: "R-407C", label: "R-407C" },
        { value: "R-22", label: "R-22 (HCFC)" },
        { value: "R-123", label: "R-123" },
        { value: "OTHER", label: "Other" }
      ],
      validation: { required: true }
    },
    compressorType: {
      type: "select",
      label: "Compressor Type",
      options: [
        { value: "CENTRIFUGAL", label: "Centrifugal" },
        { value: "SCREW", label: "Screw" },
        { value: "SCROLL", label: "Scroll" },
        { value: "RECIPROCATING", label: "Reciprocating" },
        { value: "ABSORPTION", label: "Absorption" }
      ],
      validation: { required: true }
    },
    heatRejectionType: {
      type: "select",
      label: "Heat Rejection Type",
      options: [
        { value: "WATER-COOLED", label: "Water-Cooled" },
        { value: "AIR-COOLED", label: "Air-Cooled" },
        { value: "EVAPORATIVE", label: "Evaporative" }
      ],
      validation: { required: true }
    },
    compressorCondition: {
      type: "select",
      label: "Compressor Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    condenserCondition: {
      type: "select",
      label: "Condenser Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    evaporatorCondition: {
      type: "select",
      label: "Evaporator Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    chillerType: {
      type: "select",
      label: "Chiller Type",
      options: [
        { value: "AIR COOLED", label: "Air Cooled" },
        { value: "WATER COOLED", label: "Water Cooled" }
      ],
      validation: { required: true }
    },
    variableSpeed: {
      type: "radio",
      label: "Variable Speed",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    designInformation: {
      type: "object",
      label: "Design Information",
      fields: {
        capacity: {
          type: "text",
          label: "Capacity (Tons)",
          validation: { required: false }
        },
        kw: {
          type: "text",
          label: "kW",
          validation: { required: false }
        },
        evaporatorDetails: {
          type: "textarea",
          label: "Evaporator Details",
          validation: { required: false }
        },
        condenserDetails: {
          type: "textarea",
          label: "Condenser Details",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="common-fields.ts">
import { SurveyTemplate } from './types';

/**
 * Common base fields that should be available in all survey templates
 * This ensures consistency across all templates and makes it easier to add
 * new common fields in the future.
 */
export const commonBaseFields = {
  // Existing common fields
  buildingNo: {
    type: "text",
    label: "Building Number",
    validation: { required: false }
  },
  preparedBy: {
    type: "text",
    label: "Prepared By",
    validation: { required: true }
  },
  date: {
    type: "date",
    label: "Date",
    validation: { required: true }
  },
  
  // New fields for pictures, notes, and markups
  surveyPhotos: {
    type: "array",
    label: "Survey Photos",
    itemTemplate: {
      photo: {
        type: "file",
        label: "Photo",
        validation: { required: true }
      },
      description: {
        type: "text",
        label: "Description",
        validation: { required: false }
      },
      location: {
        type: "text",
        label: "Location",
        validation: { required: false }
      }
    },
    validation: { required: false }
  },
  
  surveyNotes: {
    type: "array",
    label: "Survey Notes",
    itemTemplate: {
      note: {
        type: "textarea",
        label: "Note",
        validation: { required: true }
      },
      category: {
        type: "select",
        label: "Category",
        options: [
          { value: "GENERAL", label: "General" },
          { value: "ISSUE", label: "Issue" },
          { value: "RECOMMENDATION", label: "Recommendation" },
          { value: "OBSERVATION", label: "Observation" }
        ],
        validation: { required: false }
      },
      priority: {
        type: "select",
        label: "Priority",
        options: [
          { value: "LOW", label: "Low" },
          { value: "MEDIUM", label: "Medium" },
          { value: "HIGH", label: "High" }
        ],
        validation: { required: false }
      }
    },
    validation: { required: false }
  },
  
  markups: {
    type: "array",
    label: "Markups & Diagrams",
    itemTemplate: {
      markup: {
        type: "file",
        label: "Markup/Diagram",
        validation: { required: true }
      },
      title: {
        type: "text",
        label: "Title",
        validation: { required: true }
      },
      description: {
        type: "textarea",
        label: "Description",
        validation: { required: false }
      }
    },
    validation: { required: false }
  },
  
  generalNotes: {
    type: "textarea",
    label: "General Notes",
    validation: { required: false }
  }
};

/**
 * Helper function to create base fields for a template
 * This allows templates to extend the common base fields with template-specific fields
 */
export function createBaseFields(additionalFields = {}) {
  return { ...commonBaseFields, ...additionalFields };
}
</file>

<file path="controls-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const controlsSurvey: SurveyTemplate = {
  name: "Controls Survey",
  description: "Survey template for Building Control Systems",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    controlDwgsAvailable: {
      type: "radio",
      label: "Control Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSequencesAvailable: {
      type: "radio",
      label: "Control Sequences Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSystemUsedForTesting: {
      type: "radio",
      label: "Control System Used For Testing",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    systemOperational: {
      type: "radio",
      label: "System Operational",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General System Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    serviceContract: {
      type: "radio",
      label: "Service Contract",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    serviceContractorName: {
      type: "text",
      label: "Service Contractor Name",
      validation: { required: false }
    },
    serviceContractorPhone: {
      type: "text",
      label: "Service Contractor Phone",
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    nameplateData: {
      type: "object",
      label: "Nameplate Data",
      fields: {
        emcs1Manufacturer: {
          type: "text",
          label: "EMCS-1 Manufacturer",
          validation: { required: false }
        },
        emcs1ModelNumber: {
          type: "text",
          label: "EMCS-1 Model Number",
          validation: { required: false }
        },
        emcs1SerialNumber: {
          type: "text",
          label: "EMCS-1 Serial Number",
          validation: { required: false }
        },
        emcs1SoftwareVersion: {
          type: "text",
          label: "EMCS-1 Software Version",
          validation: { required: false }
        },
        emcs2Manufacturer: {
          type: "text",
          label: "EMCS-2 Manufacturer",
          validation: { required: false }
        },
        emcs2ModelNumber: {
          type: "text",
          label: "EMCS-2 Model Number",
          validation: { required: false }
        },
        emcs2SerialNumber: {
          type: "text",
          label: "EMCS-2 Serial Number",
          validation: { required: false }
        },
        emcs2SoftwareVersion: {
          type: "text",
          label: "EMCS-2 Software Version",
          validation: { required: false }
        }
      }
    },
    investigationPhaseTesting: {
      type: "object",
      label: "Investigation Phase Testing",
      fields: {
        pcFrontendAvailable: {
          type: "radio",
          label: "PC/Front-end Available",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        computerSoftwareNeeded: {
          type: "radio",
          label: "Computer Software Needed",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        }
      }
    },
    generalControlSystem: {
      type: "object",
      label: "General Control System",
      fields: {
        controlType: {
          type: "select",
          label: "Control Type",
          options: [
            { value: "DDC", label: "DDC" },
            { value: "ELECTRONIC", label: "Electronic" },
            { value: "PNEUMATIC", label: "Pneumatic" }
          ],
          validation: { required: false }
        },
        capabilities: {
          type: "multiselect",
          label: "Capabilities",
          options: [
            { value: "SCHEDULING", label: "Scheduling" },
            { value: "START_STOP", label: "Start/Stop" },
            { value: "FAN_PUMP_SPEED_CONTROL", label: "Fan/Pump Speed Control" },
            { value: "TEMPERATURE_CONTROL", label: "Temperature Control" },
            { value: "RESET_STRATEGIES", label: "Reset Strategies" },
            { value: "DATA_TRENDING", label: "Data Trending" }
          ],
          validation: { required: false }
        },
        systemsControlled: {
          type: "multiselect",
          label: "Systems Controlled",
          options: [
            { value: "AIR_HANDLING_UNITS", label: "Air Handling Units" },
            { value: "CHILLERS", label: "Chillers" },
            { value: "BOILERS", label: "Boilers" },
            { value: "PUMPS", label: "Pumps" },
            { value: "DOMESTIC_HOT_WATER", label: "Domestic Hot Water" },
            { value: "ZONE_TERMINAL_UNITS", label: "Zone Terminal Units" },
            { value: "ZONE_TEMPERATURES", label: "Zone Temperatures" },
            { value: "OUTSIDE_AIR_TEMPERATURES", label: "Outside Air Temperatures" },
            { value: "LIGHTING", label: "Lighting" }
          ],
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="equipment-summaries-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const equipmentSummariesSurvey: SurveyTemplate = {
  name: "Equipment Summaries Survey",
  description: "Survey template for Equipment Summaries",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    generalNotes: {
      type: "textarea",
      label: "Notes",
      validation: { required: false }
    }
,
    
    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field from additionalBaseFields
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }
  },
  specificFields: {
    equipmentSummary: {
      type: "object",
      label: "Equipment Summary",
      fields: {
        coolingSystemType: {
          type: "select",
          label: "Type of cooling system",
          options: [
            { value: "DX", label: "DX" },
            { value: "CHILLED WATER", label: "Chilled water" }
          ],
          validation: { required: false }
        },
        chillerCondenserType: {
          type: "text",
          label: "Type of chiller condenser",
          validation: { required: false }
        },
        pumps: {
          type: "text",
          label: "Pumps",
          validation: { required: false }
        },
        hvacDistributionSystems: {
          type: "multiselect",
          label: "HVAC distribution systems",
          options: [
            { value: "VAV", label: "VAV" },
            { value: "CV", label: "CV" },
            { value: "MZU", label: "MZU" },
            { value: "ZONE TERMINALS", label: "Zone terminals" }
          ],
          validation: { required: false }
        },
        systemsAge: {
          type: "text",
          label: "Age of systems",
          validation: { required: false }
        },
        heatingSystemType: {
          type: "multiselect",
          label: "Heating system type",
          options: [
            { value: "BOILER", label: "Boiler" },
            { value: "GAS FIRED", label: "Gas fired" },
            { value: "HX", label: "HX" }
          ],
          validation: { required: false }
        },
        hvacControlSystemType: {
          type: "multiselect",
          label: "HVAC control system type",
          options: [
            { value: "PNEUMATIC", label: "Pneumatic" },
            { value: "DDC", label: "DDC" },
            { value: "FRONT END", label: "Front end" },
            { value: "PROGRAMMABLE T-STATS", label: "Programmable t-stats" }
          ],
          validation: { required: false }
        },
        miscellaneous: {
          type: "text",
          label: "Miscellaneous",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="exhaust-fan-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const exhaustFanSurvey: SurveyTemplate = {
  name: "Exhaust Fan Survey",
  description: "Survey template for Exhaust Fans",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating During Survey",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    backUp: {
      type: "radio",
      label: "Back Up",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    generalSystemCondition: {
      type: "select",
      label: "Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    buildingPressure: {
      type: "select",
      label: "Overall Building Pressure",
      options: [
        { value: "POSITIVE", label: "Positive" },
        { value: "NEGATIVE", label: "Negative" }
      ],
      validation: { required: false }
    },
    fanNameplateData: {
      type: "object",
      label: "Fan Nameplate Data",
      fields: {
        manufacturer: {
          type: "text",
          label: "Manufacturer",
          validation: { required: false }
        },
        modelNumber: {
          type: "text",
          label: "Model Number",
          validation: { required: false }
        },
        serialNumber: {
          type: "text",
          label: "Serial Number",
          validation: { required: false }
        },
        fanSize: {
          type: "text",
          label: "Fan Size",
          validation: { required: false }
        }
      }
    },
    motorNameplateData: {
      type: "object",
      label: "Motor Nameplate Data",
      fields: {
        manufacturer: {
          type: "text",
          label: "Manufacturer",
          validation: { required: false }
        },
        fullLoadHP: {
          type: "text",
          label: "Full Load HP",
          validation: { required: false }
        },
        phase: {
          type: "select",
          label: "Phase",
          options: [
            { value: "1", label: "1" },
            { value: "3", label: "3" }
          ],
          validation: { required: false }
        },
        volts: {
          type: "text",
          label: "Volts",
          validation: { required: false }
        },
        fullLoadAmps: {
          type: "text",
          label: "Full Load Amps",
          validation: { required: false }
        },
        fullLoadRPM: {
          type: "text",
          label: "Full Load RPM",
          validation: { required: false }
        },
        efficiency: {
          type: "text",
          label: "Efficiency",
          validation: { required: false }
        },
        powerFactor: {
          type: "text",
          label: "Power Factor",
          validation: { required: false }
        },
        frameSize: {
          type: "text",
          label: "Frame Size (Feet)",
          validation: { required: false }
        },
        serviceFactor: {
          type: "text",
          label: "Service Factor",
          validation: { required: false }
        }
      }
    },
    schedule: {
      type: "object",
      label: "Schedule Reference # or Weekly Schedule",
      fields: {
        weekday: {
          type: "text",
          label: "Weekday",
          validation: { required: false }
        },
        saturday: {
          type: "text",
          label: "Saturday",
          validation: { required: false }
        },
        sunday: {
          type: "text",
          label: "Sunday",
          validation: { required: false }
        },
        holiday: {
          type: "text",
          label: "Holiday",
          validation: { required: false }
        }
      }
    },
    measuredData: {
      type: "object",
      label: "Measured Data",
      fields: {
        volts: {
          type: "text",
          label: "Volts",
          validation: { required: false }
        },
        amps: {
          type: "text",
          label: "Amps",
          validation: { required: false }
        },
        kW: {
          type: "text",
          label: "kW",
          validation: { required: false }
        },
        powerFactor: {
          type: "text",
          label: "Power Factor",
          validation: { required: false }
        },
        totalSP: {
          type: "text",
          label: "Total S.P.",
          validation: { required: false }
        },
        cfm: {
          type: "text",
          label: "CFM",
          validation: { required: false }
        },
        fanRPM: {
          type: "text",
          label: "Fan RPM",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="index.ts">
// Export all survey templates
import { ahuSurvey } from './ahu-survey';
import { boilerSurvey } from './boiler-survey';
import { chillerSurvey } from './chiller-survey';
import { pumpSurvey } from './pump-survey';
import { controlsSurvey } from './controls-survey';
import { exhaustFanSurvey } from './exhaust-fan-survey';
import { rtuSurvey } from './rtu-survey';
import { zoneTerminalSurvey } from './zone-terminal-survey';
import { lightingSurvey } from './lighting-survey';
import { equipmentSummariesSurvey } from './equipment-summaries-survey';
import { buildingInformationSurvey } from './building-information-survey';

// Export array of all survey templates
export const surveyTemplates = [
  ahuSurvey,
  boilerSurvey,
  chillerSurvey,
  pumpSurvey,
  controlsSurvey,
  exhaustFanSurvey,
  rtuSurvey,
  zoneTerminalSurvey,
  lightingSurvey,
  equipmentSummariesSurvey,
  buildingInformationSurvey
];

// Export individual templates
export {
  ahuSurvey,
  boilerSurvey,
  chillerSurvey,
  pumpSurvey,
  controlsSurvey,
  exhaustFanSurvey,
  rtuSurvey,
  zoneTerminalSurvey,
  lightingSurvey,
  equipmentSummariesSurvey,
  buildingInformationSurvey
};
</file>

<file path="lighting-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const lightingSurvey: SurveyTemplate = {
  name: "Lighting Survey",
  description: "Survey template for Lighting Systems",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    lightingDwgsAvailable: {
      type: "radio",
      label: "Lighting Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendReplacement: {
      type: "radio",
      label: "Recommend Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    fixtureType: {
      type: "select",
      label: "Fixture Type",
      options: [
        { value: "RECESSED", label: "Recessed" },
        { value: "SURFACE", label: "Surface" },
        { value: "HANGING", label: "Hanging" }
      ],
      validation: { required: true }
    },
    lampType: {
      type: "select",
      label: "Lamp Type",
      options: [
        { value: "INC", label: "Incandescent" },
        { value: "FL", label: "Fluorescent" },
        { value: "CFL", label: "Compact Fluorescent" },
        { value: "HID", label: "High Intensity Discharge" },
        { value: "HPS", label: "High Pressure Sodium" },
        { value: "MH", label: "Metal Halide" },
        { value: "MV", label: "Mercury Vapor" }
      ],
      validation: { required: true }
    },
    fixtureDescription: {
      type: "text",
      label: "Fixture Description",
      validation: { required: false }
    },
    lampsPerFixture: {
      type: "text",
      label: "Lamps per Fixture",
      validation: { required: false }
    },
    wattsPerLamp: {
      type: "text",
      label: "Watts per Lamp",
      validation: { required: false }
    },
    ballastType: {
      type: "select",
      label: "Ballast Type",
      options: [
        { value: "MAGNETIC", label: "Magnetic" },
        { value: "ELECTRONIC", label: "Electronic" }
      ],
      validation: { required: false }
    },
    estimatedWSF: {
      type: "text",
      label: "Estimated W/SF",
      validation: { required: false }
    },
    lightLevels: {
      type: "array",
      label: "Light Levels",
      itemTemplate: {
        spaceName: {
          type: "text",
          label: "Space Name",
          validation: { required: false }
        },
        lightLevel: {
          type: "text",
          label: "Light Level",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    controlInformation: {
      type: "object",
      label: "Control Information",
      fields: {
        lightingControlDwgsAvailable: {
          type: "radio",
          label: "Lighting Control Drawings Available",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        onOffControl: {
          type: "select",
          label: "ON/OFF Control",
          options: [
            { value: "CONTROL SYSTEM", label: "Control System" },
            { value: "TIME CLOCK", label: "Time Clock" },
            { value: "MANUAL", label: "Manual" },
            { value: "OCCUPANCY SENSORS", label: "Occupancy Sensors" }
          ],
          validation: { required: false }
        },
        schedule: {
          type: "object",
          label: "Schedule",
          fields: {
            weekdays: {
              type: "text",
              label: "Weekdays",
              validation: { required: false }
            },
            saturday: {
              type: "text",
              label: "Saturday",
              validation: { required: false }
            },
            sunday: {
              type: "text",
              label: "Sunday",
              validation: { required: false }
            },
            holidays: {
              type: "text",
              label: "Holidays",
              validation: { required: false }
            }
          }
        },
        additionalControl: {
          type: "multiselect",
          label: "Additional Control",
          options: [
            { value: "DIMMERS", label: "Dimmers" },
            { value: "PHOTOCELL", label: "Photocell" }
          ],
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="package.json">
{
  "type": "module"
}
</file>

<file path="pump-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const pumpSurvey: SurveyTemplate = {
  name: "Pump Survey",
  description: "Survey template for Pumps",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    manufacturer: {
      type: "text",
      label: "Manufacturer",
      validation: { required: false }
    },
    modelNo: {
      type: "text",
      label: "Model Number",
      validation: { required: false }
    },
    serialNo: {
      type: "text",
      label: "Serial Number",
      validation: { required: false }
    },
    year: {
      type: "text",
      label: "Year",
      validation: { required: false }
    },
    mechanicalDwgsAvailable: {
      type: "radio",
      label: "Mechanical Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    maintenanceLogAvailable: {
      type: "radio",
      label: "Maintenance Log Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General System Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    controlDwgsAvailable: {
      type: "radio",
      label: "Control Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSequencesAvailable: {
      type: "radio",
      label: "Control Sequences Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSystemUsedForTesting: {
      type: "radio",
      label: "Control System Used For Testing",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    dataLoggerForInvPhase: {
      type: "radio",
      label: "Data Logger For Investigation Phase",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlType: {
      type: "select",
      label: "Control Type",
      options: [
        { value: "DDC", label: "DDC" },
        { value: "ELECTRONIC", label: "Electronic" },
        { value: "PNEUMATIC", label: "Pneumatic" }
      ],
      validation: { required: false }
    },
    onOffControlSchedule: {
      type: "text",
      label: "ON/OFF Control & Schedule",
      validation: { required: false }
    },
    status: {
      type: "text",
      label: "Status",
      validation: { required: false }
    },
    oatLockout: {
      type: "text",
      label: "OAT Lockout",
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    pumpType: {
      type: "select",
      label: "Pump Type",
      options: [
        { value: "CENTRIFUGAL", label: "Centrifugal" },
        { value: "POSITIVE DISPLACEMENT", label: "Positive Displacement" },
        { value: "VERTICAL TURBINE", label: "Vertical Turbine" },
        { value: "SUBMERSIBLE", label: "Submersible" }
      ],
      validation: { required: true }
    },
    serviceType: {
      type: "select",
      label: "Service Type",
      options: [
        { value: "CHILLED WATER", label: "Chilled Water" },
        { value: "HEATING WATER", label: "Heating Water" },
        { value: "CONDENSER WATER", label: "Condenser Water" },
        { value: "DOMESTIC WATER", label: "Domestic Water" },
        { value: "SEWAGE", label: "Sewage" },
        { value: "OTHER", label: "Other" }
      ],
      validation: { required: true }
    },
    gpm: {
      type: "number",
      label: "GPM (Gallons Per Minute)",
      validation: { required: false }
    },
    head: {
      type: "number",
      label: "Head (Feet)",
      validation: { required: false }
    },
    controlType: {
      type: "select",
      label: "Control Type",
      options: [
        { value: "CONSTANT SPEED", label: "Constant Speed" },
        { value: "VFD", label: "Variable Frequency Drive" },
        { value: "DISCHARGE THROTTLING", label: "Discharge Throttling" }
      ],
      validation: { required: true }
    },
    motorCondition: {
      type: "select",
      label: "Motor Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    impellerCondition: {
      type: "select",
      label: "Impeller Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" },
        { value: "UNKNOWN", label: "Unknown" }
      ],
      validation: { required: false }
    },
    rpm: {
      type: "number",
      label: "RPM",
      validation: { required: false }
    },
    controlOn: {
      type: "select",
      label: "Control On",
      options: [
        { value: "OAT", label: "OAT" },
        { value: "FIXED DIFFERENTIAL PRESSURE", label: "Fixed Differential Pressure" },
        { value: "RESET", label: "Reset" },
        { value: "OTHER", label: "Other" }
      ],
      validation: { required: false }
    },
    dpSetpointReset: {
      type: "object",
      label: "dP Setpoint/Reset",
      fields: {
        setpoint: {
          type: "text",
          label: "Setpoint",
          validation: { required: false }
        },
        reset: {
          type: "text",
          label: "Reset",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="README.md">
# Survey Templates

This directory contains modular survey templates for the Data Drivers application. Each template is defined in its own file, making the codebase more maintainable and easier to work with.

> **IMPORTANT**: All survey templates include additional base fields for photos, notes, and markups. These fields use the 'array' type which requires proper handling in the frontend. Make sure the SurveyField interface in `packages/types/survey.ts` includes 'array' as a valid type and has the itemTemplate property.

## Directory Structure

- `index.ts` - Exports all survey templates
- `types.ts` - Defines common types used across templates
- `additional-base-fields.ts` - Defines additional fields for photos, notes, and markups
- Individual template files (e.g., `ahu-survey.ts`, `boiler-survey.ts`, etc.)

## Available Templates

1. **AHU Survey** - Air Handling Units survey template
2. **Boiler Survey** - Boilers survey template
3. **Chiller Survey** - Chillers survey template
4. **Pump Survey** - Pumps survey template
5. **Controls Survey** - Building Control Systems survey template
6. **Exhaust Fan Survey** - Exhaust Fans survey template
7. **RTU Survey** - Rooftop Units survey template
8. **Zone Terminal Survey** - Zone Terminal Equipment survey template
9. **Lighting Survey** - Lighting Systems survey template
10. **Equipment Summaries Survey** - Equipment Summaries survey template
11. **Building Information Survey** - Building Information survey template

## How to Use

Each template follows a consistent structure with `baseFields` (common across equipment types) and `specificFields` (unique to each equipment type).

Example:
```typescript
export const ahuSurvey: SurveyTemplate = {
  name: "AHU Survey",
  description: "Survey template for Air Handling Units",
  baseFields: {
    // Common fields like buildingNo, tag, location, etc.
  },
  specificFields: {
    // AHU-specific fields
  }
};
```

## Running the Seed Script

To seed these templates into the database, use the following command:

```bash
node --experimental-modules --experimental-specifier-resolution=node --experimental-json-modules backend/prisma/seed-survey-templates.js
```

This script uses Prisma's `upsert` operation to ensure that existing templates are updated and new ones are created.

## Benefits of This Approach

- **Modularity**: Each template is defined in its own file
- **Maintainability**: Easier to update individual templates
- **Readability**: Cleaner code structure
- **Scalability**: Simple to add new templates

## Template Field Types

Templates support various field types:
- `text` - Text input
- `textarea` - Multi-line text input
- `select` - Dropdown selection
- `multiselect` - Multiple selection
- `radio` - Radio button selection
- `date` - Date input
- `file` - File upload
- `object` - Nested object with its own fields
- `array` - Array of items with a defined template

## Validation

Each field can include validation rules:
```typescript
validation: { required: true/false }
```

## Additional Base Fields for Photos, Notes, and Markups

All survey templates now include additional fields for capturing photos, notes, and markups:

> **IMPORTANT**: These fields use the 'array' type which requires proper handling in the frontend. If these fields are not appearing in the React templates, verify that the SurveyField interface in `packages/types/survey.ts` includes 'array' as a valid type.

### Survey Photos
An array of photos with descriptions and locations, allowing surveyors to document visual evidence.

```typescript
surveyPhotos: {
  type: "array",
  label: "Survey Photos",
  itemTemplate: {
    photo: {
      type: "file",
      label: "Photo",
      validation: { required: true }
    },
    description: {
      type: "text",
      label: "Description",
      validation: { required: false }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: false }
    }
  },
  validation: { required: false }
}
```

### Survey Notes
Structured notes with categories and priority levels, enabling detailed documentation of issues, recommendations, and observations.

```typescript
surveyNotes: {
  type: "array",
  label: "Survey Notes",
  itemTemplate: {
    note: {
      type: "textarea",
      label: "Note",
      validation: { required: true }
    },
    category: {
      type: "select",
      label: "Category",
      options: [
        { value: "GENERAL", label: "General" },
        { value: "ISSUE", label: "Issue" },
        { value: "RECOMMENDATION", label: "Recommendation" },
        { value: "OBSERVATION", label: "Observation" }
      ],
      validation: { required: false }
    },
    priority: {
      type: "select",
      label: "Priority",
      options: [
        { value: "LOW", label: "Low" },
        { value: "MEDIUM", label: "Medium" },
        { value: "HIGH", label: "High" }
      ],
      validation: { required: false }
    }
  },
  validation: { required: false }
}
```

### Markups & Diagrams
Support for uploading markup files and diagrams with titles and descriptions, useful for annotated drawings or sketches.

```typescript
markups: {
  type: "array",
  label: "Markups & Diagrams",
  itemTemplate: {
    markup: {
      type: "file",
      label: "Markup/Diagram",
      validation: { required: true }
    },
    title: {
      type: "text",
      label: "Title",
      validation: { required: true }
    },
    description: {
      type: "textarea",
      label: "Description",
      validation: { required: false }
    }
  },
  validation: { required: false }
}
```

## How to View These Fields

To see these fields in the database, you can:

1. Make sure the SurveyField interface in `packages/types/survey.ts` includes 'array' as a valid type:
   ```typescript
   export interface SurveyField {
     type: 'text' | 'number' | 'date' | 'select' | 'radio' | 'textarea' | 'file' | 'object' | 'array';
     // other properties...
     itemTemplate?: Record<string, SurveyField>; // For array type fields
   }
   ```

2. Run the export script to generate JSON and Markdown files:
   ```bash
   node --experimental-modules --experimental-specifier-resolution=node --experimental-json-modules backend/prisma/export-survey-templates.js
   ```

3. Open the HTML viewer to see a visual representation:
   ```bash
   open backend/prisma/survey-templates-viewer.html
   ```

4. Run the view script to see the fields in the console:
   ```bash
   node --experimental-modules --experimental-specifier-resolution=node --experimental-json-modules backend/prisma/view-survey-templates.js
   ```

### Survey Notes
Structured notes with categories and priority levels, enabling detailed documentation of issues, recommendations, and observations.

### Markups & Diagrams
Support for uploading markup files and diagrams with titles and descriptions, useful for annotated drawings or sketches.

## How to Add These Fields to Other Templates

To add these fields to other templates, you can:

> **NOTE**: These fields use the 'array' type which requires proper handling in the frontend. Make sure the SurveyField interface in `packages/types/survey.ts` includes 'array' as a valid type.

1. Import the additionalBaseFields from './additional-base-fields.ts'
2. Add the fields directly to the baseFields object
3. Use the spread operator for specific fields: `...additionalBaseFields.markups`

This approach keeps all survey data together in a single template, making it easier to manage and retrieve related information.

## Troubleshooting

### Fields Not Appearing in React Templates

If the additional base fields (surveyPhotos, surveyNotes, markups) are not appearing in the React page templates:

1. Verify that the SurveyField interface in `packages/types/survey.ts` includes 'array' as a valid type:
   ```typescript
   export interface SurveyField {
     type: 'text' | 'number' | 'date' | 'select' | 'radio' | 'textarea' | 'file' | 'object' | 'array';
     // other properties...
   }
   ```

2. Verify that the SurveyField interface includes the itemTemplate property:
   ```typescript
   export interface SurveyField {
     // existing properties...
     itemTemplate?: Record<string, SurveyField>; // For array type fields
   }
   ```

3. Restart the development server to apply the changes

4. For more information, see the documentation in `docs/surveys/array-fields-guide.md` and `docs/surveys/SURVEY-Issues.md`
</file>

<file path="rtu-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';

export const rtuSurvey: SurveyTemplate = {
  name: "RTU Survey",
  description: "Survey template for Rooftop Units",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    manufacturer: {
      type: "text",
      label: "Manufacturer",
      validation: { required: false }
    },
    modelNo: {
      type: "text",
      label: "Model Number",
      validation: { required: false }
    },
    serialNo: {
      type: "text",
      label: "Serial Number",
      validation: { required: false }
    },
    year: {
      type: "text",
      label: "Year",
      validation: { required: false }
    },
    mechanicalDwgsAvailable: {
      type: "radio",
      label: "Mechanical Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    maintenanceLogAvailable: {
      type: "radio",
      label: "Maintenance Log Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General System Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    controlDwgsAvailable: {
      type: "radio",
      label: "Control Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSequencesAvailable: {
      type: "radio",
      label: "Control Sequences Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    controlSystemUsedForTesting: {
      type: "radio",
      label: "Control System Used For Testing",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    dataLoggerForInvPhase: {
      type: "radio",
      label: "Data Logger For Investigation Phase",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    filterCondition: {
      type: "select",
      label: "Filter Condition",
      options: [
        { value: "CLEAN", label: "Clean" },
        { value: "FAIR", label: "Fair" },
        { value: "DIRTY", label: "Dirty" },
        { value: "MISSING", label: "Missing" }
      ],
      validation: { required: true }
    },
    systemType: {
      type: "select",
      label: "System Type",
      options: [
        { value: "SZVT", label: "Single Zone Variable Temperature" },
        { value: "CVRT", label: "Constant Volume Reheat Terminal" },
        { value: "MZ", label: "Multi-Zone" },
        { value: "VAV", label: "Variable Air Volume" },
        { value: "OTHER", label: "Other" }
      ],
      validation: { required: true }
    },
    fanArrangement: {
      type: "select",
      label: "Fan Arrangement",
      options: [
        { value: "BLOW-THRU", label: "Blow-Through" },
        { value: "DRAW-THRU", label: "Draw-Through" }
      ],
      validation: { required: true }
    },
    returnAirPath: {
      type: "select",
      label: "Return Air Path",
      options: [
        { value: "DUCTED", label: "Ducted" },
        { value: "PLENUM", label: "Plenum" }
      ],
      validation: { required: true }
    },
    supplyFanData: {
      type: "object",
      label: "Supply Fan Data",
      fields: {
        fanManufacturer: {
          type: "text",
          label: "Fan Manufacturer",
          validation: { required: false }
        },
        fanModelNumber: {
          type: "text",
          label: "Fan Model Number",
          validation: { required: false }
        },
        fanCFM: {
          type: "text",
          label: "Fan CFM",
          validation: { required: false }
        },
        motorManufacturer: {
          type: "text",
          label: "Motor Manufacturer",
          validation: { required: false }
        },
        hp: {
          type: "text",
          label: "HP",
          validation: { required: false }
        },
        power: {
          type: "text",
          label: "Power (V/PH/HZ)",
          validation: { required: false }
        },
        efficiency: {
          type: "text",
          label: "Efficiency",
          validation: { required: false }
        },
        powerFactor: {
          type: "text",
          label: "Power Factor",
          validation: { required: false }
        },
        vfdManufacturer: {
          type: "text",
          label: "VFD Manufacturer",
          validation: { required: false }
        },
        vfdModelNumber: {
          type: "text",
          label: "VFD Model Number",
          validation: { required: false }
        },
        vfdSerialNumber: {
          type: "text",
          label: "VFD Serial Number",
          validation: { required: false }
        }
      }
    },
    compressorData: {
      type: "object",
      label: "Compressor Data",
      fields: {
        quantity: {
          type: "text",
          label: "Quantity",
          validation: { required: false }
        },
        rla: {
          type: "text",
          label: "RLA (each)",
          validation: { required: false }
        },
        power: {
          type: "text",
          label: "Power (V/PH/HZ)",
          validation: { required: false }
        },
        hpKw: {
          type: "text",
          label: "HP/KW",
          validation: { required: false }
        }
      }
    },
    condenserFanData: {
      type: "object",
      label: "Condenser Fan Data",
      fields: {
        quantity: {
          type: "text",
          label: "Quantity",
          validation: { required: false }
        },
        manufacturer: {
          type: "text",
          label: "Manufacturer",
          validation: { required: false }
        },
        fullLoadHP: {
          type: "text",
          label: "Full Load HP",
          validation: { required: false }
        },
        fullLoadRPM: {
          type: "text",
          label: "Full Load RPM",
          validation: { required: false }
        },
        efficiency: {
          type: "text",
          label: "Efficiency",
          validation: { required: false }
        },
        power: {
          type: "text",
          label: "Power (V/PH/HZ)",
          validation: { required: false }
        },
        fullLoadAmps: {
          type: "text",
          label: "Full Load Amps",
          validation: { required: false }
        },
        serviceFactor: {
          type: "text",
          label: "Service Factor",
          validation: { required: false }
        },
        fanControl: {
          type: "text",
          label: "Fan Control",
          validation: { required: false }
        }
      }
    },
    coolingCoilData: {
      type: "object",
      label: "Cooling Coil Data",
      fields: {
        type: {
          type: "select",
          label: "Type",
          options: [
            { value: "DX", label: "DX" },
            { value: "OTHER", label: "Other" }
          ],
          validation: { required: false }
        },
        inputOutput: {
          type: "text",
          label: "Input/Output",
          validation: { required: false }
        }
      }
    },
    heatingCoilData: {
      type: "object",
      label: "Heating Coil Data",
      fields: {
        type: {
          type: "select",
          label: "Type",
          options: [
            { value: "ELECTRIC", label: "Electric" },
            { value: "FUEL", label: "Fuel" }
          ],
          validation: { required: false }
        },
        inputOutput: {
          type: "text",
          label: "Input/Output",
          validation: { required: false }
        }
      }
    },
    controlInformation: {
      type: "object",
      label: "Control Information",
      fields: {
        rtuOnBas: {
          type: "radio",
          label: "RTU on BAS",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        controlType: {
          type: "select",
          label: "Control Type",
          options: [
            { value: "DDC", label: "DDC" },
            { value: "ELECTRONIC", label: "Electronic" },
            { value: "PNEUMATIC", label: "Pneumatic" }
          ],
          validation: { required: false }
        },
        controlPoints: {
          type: "multiselect",
          label: "Control Points",
          options: [
            { value: "SAT", label: "SAT - Supply Air Temperature" },
            { value: "MAT", label: "MAT - Mixed Air Temperature" },
            { value: "RAT", label: "RAT - Return Air Temperature" },
            { value: "CCV", label: "CCV - Cooling Coil Valve" },
            { value: "HCV", label: "HCV - Heating Coil Valve" },
            { value: "SF", label: "SF - Supply Fan" },
            { value: "RF", label: "RF - Return Fan" },
            { value: "OAT", label: "OAT - Outside Air Temperature" }
          ],
          validation: { required: false }
        },
        onOffControl: {
          type: "select",
          label: "ON/OFF Control",
          options: [
            { value: "CONTROL SYSTEM", label: "Control System" },
            { value: "TIME CLOCK", label: "Time Clock" },
            { value: "MANUAL", label: "Manual" }
          ],
          validation: { required: false }
        },
        schedule: {
          type: "object",
          label: "Schedule",
          fields: {
            weekdays: {
              type: "text",
              label: "Weekdays",
              validation: { required: false }
            },
            saturday: {
              type: "text",
              label: "Saturday",
              validation: { required: false }
            },
            sunday: {
              type: "text",
              label: "Sunday",
              validation: { required: false }
            },
            holidays: {
              type: "text",
              label: "Holidays",
              validation: { required: false }
            }
          }
        }
      }
    },
    fanControl: {
      type: "object",
      label: "Fan Control",
      fields: {
        type: {
          type: "select",
          label: "Type",
          options: [
            { value: "CV", label: "CV" },
            { value: "VFD", label: "VFD" },
            { value: "VIV", label: "VIV" }
          ],
          validation: { required: false }
        },
        controlOn: {
          type: "select",
          label: "Control On",
          options: [
            { value: "FIXED STATIC", label: "Fixed Static" },
            { value: "RESET STATIC", label: "Reset Static" },
            { value: "OAT RESET", label: "OAT Reset" }
          ],
          validation: { required: false }
        },
        staticSetpointReset: {
          type: "text",
          label: "Static Setpoint/Reset",
          validation: { required: false }
        }
      }
    },
    outsideAirControl: {
      type: "object",
      label: "Outside Air Control",
      fields: {
        control: {
          type: "select",
          label: "Control",
          options: [
            { value: "FIXED", label: "Fixed" },
            { value: "ECONO", label: "Economizer" },
            { value: "DEMAND CONTROLLED VENT", label: "Demand Controlled Ventilation" }
          ],
          validation: { required: false }
        },
        econoType: {
          type: "select",
          label: "Economizer Type",
          options: [
            { value: "TEMP", label: "Temperature" },
            { value: "ENTHALPY", label: "Enthalpy" }
          ],
          validation: { required: false }
        },
        controlOn: {
          type: "select",
          label: "Control On",
          options: [
            { value: "MAT", label: "MAT" },
            { value: "OAT<RAT", label: "OAT<RAT" }
          ],
          validation: { required: false }
        },
        minOaPercent: {
          type: "text",
          label: "Min. OA %",
          validation: { required: false }
        },
        maxOaPercent: {
          type: "text",
          label: "Max OA %",
          validation: { required: false }
        },
        highOatLockout: {
          type: "text",
          label: "High OAT Lockout",
          validation: { required: false }
        },
        lowOatLockout: {
          type: "text",
          label: "Low OAT Lockout",
          validation: { required: false }
        }
      }
    },
    supplyMixedAirTemperatureControl: {
      type: "object",
      label: "Supply/Mixed Air Temperature Control",
      fields: {
        satControl: {
          type: "select",
          label: "SAT Control",
          options: [
            { value: "FIXED", label: "Fixed" },
            { value: "RESET", label: "Reset" }
          ],
          validation: { required: false }
        },
        resetControl: {
          type: "select",
          label: "Reset Control",
          options: [
            { value: "ZONE INFO", label: "Zone Info" },
            { value: "OAT", label: "OAT" }
          ],
          validation: { required: false }
        },
        satSetpointReset: {
          type: "text",
          label: "SAT Setpoint/Reset",
          validation: { required: false }
        },
        matControl: {
          type: "select",
          label: "MAT Control",
          options: [
            { value: "FIXED", label: "Fixed" },
            { value: "TRACK SAT", label: "Track SAT" }
          ],
          validation: { required: false }
        },
        matSetpointReset: {
          type: "text",
          label: "MAT Setpoint/Reset",
          validation: { required: false }
        }
      }
    },
    mzuControl: {
      type: "object",
      label: "MZU Control",
      fields: {
        noZones: {
          type: "text",
          label: "No. Zones",
          validation: { required: false }
        },
        zoneSatSetpoints: {
          type: "text",
          label: "Zone SAT Setpoints",
          validation: { required: false }
        },
        hotDeckControl: {
          type: "select",
          label: "Hot Deck Control",
          options: [
            { value: "FIXED", label: "Fixed" },
            { value: "RESET", label: "Reset" }
          ],
          validation: { required: false }
        },
        hdSetpointReset: {
          type: "text",
          label: "HD Setpoint/Reset",
          validation: { required: false }
        },
        coldDeckControl: {
          type: "select",
          label: "Cold Deck Control",
          options: [
            { value: "FIXED", label: "Fixed" },
            { value: "RESET", label: "Reset" }
          ],
          validation: { required: false }
        },
        cdSetpointReset: {
          type: "text",
          label: "CD Setpoint/Reset",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

<file path="types.ts">
// Define types for field configuration
export type FieldValidation = { required: boolean };
export type FieldOption = { value: string; label: string };

// Define the survey template type
export type SurveyTemplate = {
  name: string;
  description: string;
  baseFields: Record<string, any>;
  specificFields: Record<string, any>;
};

// Also export a value for Node.js to import
export const SurveyTemplate = {};
</file>

<file path="update-markups-field.js">
/**
 * Script to update the markups field in all survey templates
 * 
 * This script updates all survey templates to use the markups field directly
 * instead of using the spread operator.
 * 
 * To run:
 * node --experimental-modules --experimental-specifier-resolution=node --experimental-json-modules backend/prisma/survey-templates/update-markups-field.js
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get the directory name
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Directory containing the survey templates
const templatesDir = __dirname;

// List of template files to update (excluding the AHU template which we've already updated)
const templateFiles = [
  'boiler-survey.ts',
  'chiller-survey.ts',
  'pump-survey.ts',
  'controls-survey.ts',
  'exhaust-fan-survey.ts',
  'rtu-survey.ts',
  'zone-terminal-survey.ts',
  'lighting-survey.ts',
  'equipment-summaries-survey.ts',
  'building-information-survey.ts'
];

// The content to replace
const oldContent = `    // Include the markups field from additionalBaseFields
    ...additionalBaseFields.markups`;

const newContent = `    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }`;

// Process each template file
for (const file of templateFiles) {
  const filePath = path.join(templatesDir, file);
  
  try {
    // Read the file content
    let content = fs.readFileSync(filePath, 'utf8');
    
    // Check if the file contains the old content
    if (content.includes(oldContent)) {
      // Replace the old content with the new content
      content = content.replace(oldContent, newContent);
      
      // Write the updated content back to the file
      fs.writeFileSync(filePath, content);
      console.log(`Updated ${file}`);
    } else {
      console.log(`No changes needed for ${file}`);
    }
  } catch (error) {
    console.error(`Error processing ${file}:`, error);
  }
}

console.log('All templates updated successfully!');
</file>

<file path="zone-terminal-survey.ts">
import { SurveyTemplate } from './types';
import { additionalBaseFields } from './additional-base-fields';


export const zoneTerminalSurvey: SurveyTemplate = {
  name: "Zone Terminal Survey",
  description: "Survey template for Zone Terminal Equipment",
  baseFields: {
    buildingNo: {
      type: "text",
      label: "Building Number",
      validation: { required: false }
    },
    tag: {
      type: "text",
      label: "Tag",
      validation: { required: true }
    },
    location: {
      type: "text",
      label: "Location",
      validation: { required: true }
    },
    serves: {
      type: "text",
      label: "Serves",
      validation: { required: false }
    },
    preparedBy: {
      type: "text",
      label: "Prepared By",
      validation: { required: true }
    },
    date: {
      type: "date",
      label: "Date",
      validation: { required: true }
    },
    mechanicalDwgsAvailable: {
      type: "radio",
      label: "Mechanical Drawings Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    maintenanceLogAvailable: {
      type: "radio",
      label: "Maintenance Log Available",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    recommendEquipReplacement: {
      type: "radio",
      label: "Recommend Equipment Replacement",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    dataLoggerForInvPhase: {
      type: "radio",
      label: "Data Logger For Investigation Phase",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: false }
    },
    unitOperating: {
      type: "radio",
      label: "Unit Operating",
      options: [
        { value: "YES", label: "Yes" },
        { value: "NO", label: "No" }
      ],
      validation: { required: true }
    },
    generalSystemCondition: {
      type: "select",
      label: "General Unit Condition",
      options: [
        { value: "POOR", label: "Poor" },
        { value: "FAIR", label: "Fair" },
        { value: "GOOD", label: "Good" },
        { value: "EXCELLENT", label: "Excellent" }
      ],
      validation: { required: true }
    },
    issuesLogSummary: {
      type: "textarea",
      label: "Issues Log Summary",
      validation: { required: false }
    },
    generalNotes: {
      type: "textarea",
      label: "General Notes",
      validation: { required: false }
    },
    equipmentPicture: {
      type: "file",
      label: "Equipment Photo",
      validation: { required: false }
    },

    // Additional fields for photos, notes, and markups
    surveyPhotos: {
      type: "array",
      label: "Survey Photos",
      itemTemplate: {
        photo: {
          type: "file",
          label: "Photo",
          validation: { required: true }
        },
        description: {
          type: "text",
          label: "Description",
          validation: { required: false }
        },
        location: {
          type: "text",
          label: "Location",
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    surveyNotes: {
      type: "array",
      label: "Survey Notes",
      itemTemplate: {
        note: {
          type: "textarea",
          label: "Note",
          validation: { required: true }
        },
        category: {
          type: "select",
          label: "Category",
          options: [
            { value: "GENERAL", label: "General" },
            { value: "ISSUE", label: "Issue" },
            { value: "RECOMMENDATION", label: "Recommendation" },
            { value: "OBSERVATION", label: "Observation" }
          ],
          validation: { required: false }
        },
        priority: {
          type: "select",
          label: "Priority",
          options: [
            { value: "LOW", label: "Low" },
            { value: "MEDIUM", label: "Medium" },
            { value: "HIGH", label: "High" }
          ],
          validation: { required: false }
        }
      },
      validation: { required: false }
    },
    
    // Include the markups field directly
    markups: {
      type: "array",
      label: "Markups & Diagrams",
      itemTemplate: additionalBaseFields.markups.itemTemplate,
      validation: {
        required: false
      }
    }

  },
  specificFields: {
    systemType: {
      type: "select",
      label: "Type",
      options: [
        { value: "VAV BOX", label: "VAV Box" },
        { value: "FCU 2-PIPE", label: "Fan Coil Unit (2-Pipe)" },
        { value: "FCU 4-PIPE", label: "Fan Coil Unit (4-Pipe)" },
        { value: "CV REHEAT COIL", label: "CV Reheat Coil" },
        { value: "BASEBOARD", label: "Baseboard" }
      ],
      validation: { required: true }
    },
    heating: {
      type: "select",
      label: "Heating",
      options: [
        { value: "HW", label: "HW" },
        { value: "ELECTRIC", label: "Electric" },
        { value: "NONE", label: "None" }
      ],
      validation: { required: true }
    },
    cooling: {
      type: "select",
      label: "Cooling",
      options: [
        { value: "CHW", label: "CHW" },
        { value: "DX", label: "DX" },
        { value: "NONE", label: "None" }
      ],
      validation: { required: true }
    },
    nameplateData: {
      type: "object",
      label: "Zone Equipment Nameplate Data",
      fields: {
        manufacturer: {
          type: "text",
          label: "Manufacturer",
          validation: { required: false }
        },
        modelNumber: {
          type: "text",
          label: "Model Number",
          validation: { required: false }
        },
        serialNumber: {
          type: "text",
          label: "Serial Number",
          validation: { required: false }
        },
        heatingCapacity: {
          type: "text",
          label: "Heating Capacity",
          validation: { required: false }
        },
        coolingCapacity: {
          type: "text",
          label: "Cooling Capacity",
          validation: { required: false }
        },
        fanSizeHP: {
          type: "text",
          label: "Fan Size (HP)",
          validation: { required: false }
        }
      }
    },
    controlInformation: {
      type: "object",
      label: "Control Information",
      fields: {
        controlDwgsAvailable: {
          type: "radio",
          label: "Control Drawings Available",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        recommendTstatReplacement: {
          type: "radio",
          label: "Recommend T-stat Replacement",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        controlSequencesAvailable: {
          type: "radio",
          label: "Control Sequences Available",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        dataLoggerForInvPhase: {
          type: "radio",
          label: "Data Logger For Investigation Phase (Sensor)",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        controlSystemUsedForTesting: {
          type: "radio",
          label: "Control System Used For Testing",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        }
      }
    },
    generalZoneControl: {
      type: "object",
      label: "General Zone Control",
      fields: {
        zoneOnBas: {
          type: "radio",
          label: "Zone on BAS",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        thermostatType: {
          type: "select",
          label: "Thermostat Type",
          options: [
            { value: "DDC", label: "DDC" },
            { value: "ELECTRONIC", label: "Electronic" },
            { value: "PNEUMATIC", label: "Pneumatic" }
          ],
          validation: { required: false }
        },
        thermostatLocation: {
          type: "text",
          label: "Thermostat Location",
          validation: { required: false }
        },
        controlPoints: {
          type: "multiselect",
          label: "Control Points",
          options: [
            { value: "SETPOINT_HEATING", label: "Setpoint (Heating)" },
            { value: "SETPOINT_COOLING", label: "Setpoint (Cooling)" },
            { value: "ZONE_TEMP", label: "Zone Temp" },
            { value: "VAV_BOX_DAMPER", label: "VAV Box Damper" },
            { value: "VAV_BOX_AIRFLOW", label: "VAV Box Airflow" },
            { value: "REHEAT_COIL_VALVE", label: "Reheat Coil Valve" },
            { value: "FCU_CHW_VALVE", label: "FCU CHW Valve" },
            { value: "FCU_HW_VALVE", label: "FCU HW Valve" },
            { value: "FCU_FAN_STATUS", label: "FCU Fan Status" }
          ],
          validation: { required: false }
        },
        comfortIssues: {
          type: "multiselect",
          label: "Comfort Issues",
          options: [
            { value: "TOO_HOT", label: "Too Hot" },
            { value: "TOO_COLD", label: "Too Cold" },
            { value: "TOO_MUCH_AIRFLOW", label: "Too Much Airflow" },
            { value: "NO_COMPLAINTS", label: "No Complaints" }
          ],
          validation: { required: false }
        }
      }
    },
    onOffControlSchedule: {
      type: "object",
      label: "ON/OFF Control & Schedule",
      fields: {
        onOff: {
          type: "select",
          label: "ON/OFF",
          options: [
            { value: "CONTROL SYSTEM", label: "Control System" },
            { value: "TIME CLOCK", label: "Time Clock" },
            { value: "MANUAL", label: "Manual" }
          ],
          validation: { required: false }
        },
        weekdays: {
          type: "text",
          label: "Weekdays",
          validation: { required: false }
        },
        saturday: {
          type: "text",
          label: "Saturday",
          validation: { required: false }
        },
        sunday: {
          type: "text",
          label: "Sunday",
          validation: { required: false }
        },
        holidays: {
          type: "text",
          label: "Holidays",
          validation: { required: false }
        }
      }
    },
    zoneTemperatureControl: {
      type: "object",
      label: "Zone Temperature Control",
      fields: {
        asFoundSetpoint: {
          type: "text",
          label: "As-Found Setpoint",
          validation: { required: false }
        },
        nightSetback: {
          type: "radio",
          label: "Night Setback",
          options: [
            { value: "YES", label: "Yes" },
            { value: "NO", label: "No" }
          ],
          validation: { required: false }
        },
        occupiedCoolingSetpoint: {
          type: "text",
          label: "Occupied Cooling Setpoint",
          validation: { required: false }
        },
        occupiedHeatingSetpoint: {
          type: "text",
          label: "Occupied Heating Setpoint",
          validation: { required: false }
        },
        unoccupiedCoolingSetpoint: {
          type: "text",
          label: "Unoccupied Cooling Setpoint",
          validation: { required: false }
        },
        unoccupiedHeatingSetpoint: {
          type: "text",
          label: "Unoccupied Heating Setpoint",
          validation: { required: false }
        }
      }
    }
  }
};
</file>

</files>
